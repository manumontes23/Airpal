{"version":3,"sources":["Components/Header.js","Components/Signin.js","Components/Home.js","helpers/api.js","Components/InfoDisplay.js","Components/Icons.js","Components/Houses.js","helpers/Cookies.js","App.js","serviceWorker.js","index.js"],"names":["withRouter","withStyles","theme","root","flexGrow","grow","button","margin","spacing","unit","hidden","display","props","classes","isLoggedIn","react_default","a","createElement","className","AppBar_default","position","Toolbar_default","IconButton_default","menuButton","color","aria-label","Home_default","Button_default","onClick","history","push","console","log","main","Object","defineProperty","width","marginLeft","marginRight","breakpoints","up","paper","marginTop","flexDirection","alignItems","padding","concat","avatar","backgroundColor","palette","secondary","form","submit","redirectHome","CssBaseline_default","Paper_default","Avatar_default","LockOutlined_default","Typography_default","component","variant","onSubmit","e","preventDefault","logCheck","FormControl_default","required","fullWidth","InputLabel_default","htmlFor","Input_default","id","name","autoComplete","autoFocus","type","FormControlLabel_default","control","Checkbox_default","value","label","Home","api_ip","urls","houses","housert","admin_login","getHouses","_ref","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","fetch","sent","json","abrupt","stop","apply","this","arguments","login","_ref2","_callee2","admin","body","url","_context2","ID","PASSWORD","method","JSON","stringify","headers","Content-Type","_x","api","getHouseRT","_ref3","_callee3","houseid","_context3","URL","search","URLSearchParams","_x2","InfoDisplay","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","getRT","rt","setState","t0","not_found","renderProgressIndicator","Grid_default","container","justify","style","minHeight","index_es","size","state","item","xs","sm","direction","align","TEMPERATURE","DATETIME","CONCENTRATION","HUMIDITY","PRESSURE","res_status","renderInfo","Component","maxWidth","HomeIcon","SvgIcon_default","d","ListObject","handleClick","open","house","_this$props","ListItem_default","ListItemIcon_default","LASTNAME","NAME","ADDRESS","ExpandMore_default","ExpandLess_default","Collapse_default","in","timeout","unmountOnExit","List_default","disablePadding","nested","DISPLAY","EMAIL","FLOORNUMBER","SMOKERSNUMBER","PETSNUMBER","REVOKEHOUSE","FLOORMATERIAL","WALLSMATERIAL","PAINTTYPE","LATITUDE","ALTITUDE","LONGITUDE","INSTALLER","INSTALLDATE","substring","Components_InfoDisplay","NestedList","_this2","progress","renderHouses","subheader","ListSubheader_default","map","Houses_ListObject","key","background","paddingLeft","info","Cookies","saveCookie","set","get","saveSession","admid_id","getSession","App","session_id","event","callback","user","userNotFound","isLogged","BrowserRouter","Components_Header","Route","exact","path","render","Signin","Houses","Redirect","from","to","Boolean","window","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.69c46e66.chunk.js","sourcesContent":["import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport HomeIcon from '@material-ui/icons/Home'\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    grow: {\r\n      flexGrow: 1,\r\n    },\r\n    button: {\r\n      margin: theme.spacing.unit,\r\n    },\r\n    hidden: {\r\n      display: \"none\"\r\n    }\r\n  })\r\n  \r\nfunction Header(props) {\r\n    const { classes, isLoggedIn } = props;\r\n    return (\r\n      <div className={classes.root}>\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n            <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\">\r\n                <HomeIcon/>\r\n              AIRPAL\r\n            </IconButton> \r\n            <Button \r\n              color=\"inherit\" \r\n              className={isLoggedIn ? classes.button : classes.hidden}\r\n              onClick={() => props.history.push(\"/home\")}>\r\n              Home\r\n            </Button>\r\n            <Button               \r\n              color=\"inherit\" \r\n              className={isLoggedIn ? classes.button : classes.hidden}\r\n              onClick={() => props.history.push(\"/houses\")}>\r\n              Houses\r\n            </Button>\r\n            <Button               \r\n              color=\"inherit\" \r\n              className={isLoggedIn ? classes.button : classes.hidden}\r\n              onClick={() => props.history.push(\"/home\")}>\r\n              Displays\r\n            </Button>\r\n            <Button               \r\n              color=\"inherit\" \r\n              className={isLoggedIn ? classes.button : classes.hidden}\r\n              onClick={() => props.history.push(\"/home\")}>\r\n              Admins\r\n            </Button>\r\n            <Button               \r\n              color=\"inherit\" \r\n              className={isLoggedIn ? classes.button : classes.hidden}\r\n              onClick={() => props.history.push(\"/home\")}>\r\n              Warnings\r\n            </Button>\r\n            <Button               \r\n              color=\"inherit\" \r\n              className={isLoggedIn ? classes.button : classes.hidden}\r\n              onClick={() => console.log(\"Falta\")}>              \r\n              Log Out\r\n            </Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n    );\r\n  } \r\n  \r\n  \r\n  export default withRouter(withStyles(styles)(Header));\r\n","import React, { useState } from 'react'; \r\nimport PropTypes from 'prop-types';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst styles = theme => ({\r\n  main: {\r\n    width: 'auto',\r\n    display: 'block', // Fix IE 11 issue.\r\n    marginLeft: theme.spacing.unit * 3,\r\n    marginRight: theme.spacing.unit * 3,\r\n    [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\r\n      width: 400,\r\n      marginLeft: 'auto',\r\n      marginRight: 'auto',\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing.unit * 8,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme.spacing.unit * 3}px`,\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing.unit,\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing.unit,\r\n  },\r\n  submit: {\r\n    marginTop: theme.spacing.unit * 3,\r\n  },\r\n});\r\n\r\n\r\n/**\r\n * \r\n * @props\r\n * {\r\n *  isLoggedIn -> Bool variable that says if the user is logged in or not (Cookies, specially)\r\n * } \r\n */\r\nfunction SignIn(props) {\r\n  const redirectHome = () => props.history.push(\"/home\"); \r\n\r\n  if(props.isLoggedIn) redirectHome();\r\n\r\n  const { classes } = props;\r\n\r\n  function send(e) {\r\n      e.preventDefault();\r\n      props.logCheck(e, redirectHome);\r\n  }\r\n\r\n  return (\r\n    <main className={classes.main}>\r\n      <CssBaseline />\r\n      <Paper className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={send}>\r\n          <FormControl margin=\"normal\" required fullWidth>\r\n            <InputLabel htmlFor=\"email\">ID</InputLabel>\r\n            <Input id=\"email\" name=\"email\" autoComplete=\"email\" autoFocus />\r\n          </FormControl>\r\n          <FormControl margin=\"normal\" required fullWidth>\r\n            <InputLabel htmlFor=\"password\">Contraseña</InputLabel>\r\n            <Input name=\"password\" type=\"password\" id=\"password\" autoComplete=\"current-password\" />\r\n          </FormControl>\r\n          <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remcuerdame\"\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Ingresar\r\n          </Button>\r\n        </form>\r\n      </Paper>\r\n    </main>\r\n  );\r\n}\r\n\r\nSignIn.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withRouter(withStyles(styles)(SignIn));","import React from 'react';\r\n\r\nfunction Home(props){\r\n    return <h1> Hola desde Home </h1>\r\n}\r\n\r\nexport default Home;","\r\nconst api_ip = \"http://35.237.240.199:3002/api\";\r\nconst urls = {\r\n    houses: `${api_ip}/house`,\r\n    housert: `${api_ip}/house/rt`,\r\n    admin_login: `${api_ip}/admin/login`\r\n}\r\n\r\n/**\r\n * Calls Airpal API and returns a Promise with that HTTP request\r\n */\r\nconst getHouses = async () => {\r\n    //TODO: Call API and get houses\r\n    let houses = await fetch(urls.houses);\r\n    houses = await houses.json();\r\n    return houses;\r\n}\r\n\r\n\r\n/**\r\n * Calls Airpal API to look for the admin to login \r\n * \r\n * @admin must be in the format\r\n * {\r\n *  ID: @admin.ID\r\n *  PASSWORD: @admin.PASSWORD\r\n * } \r\n * \r\n * @return a JSON with the admin found, or a {} in case not found/not exists\r\n */\r\nconst login = async (admin) => {\r\n    const body = {\r\n        ID: `${admin.ID}`,\r\n        PASSWORD: `${admin.PASSWORD}`\r\n    };\r\n\r\n    const json = {\r\n        method: 'POST',\r\n        body: JSON.stringify(body),\r\n        headers:{\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n    const url = urls.admin_login;\r\n    let login = await fetch(url, json);\r\n\r\n    return login;\r\n}\r\n\r\nconst getHouseRT = async (houseid) => {\r\n    //TODO: Call API and get houses\r\n    let url = new URL(urls.housert);\r\n    url.search = new URLSearchParams({houseid})\r\n    let housert = await fetch(url);\r\n    housert = await housert.json();\r\n    return housert;\r\n}\r\n\r\nexport default {\r\n    getHouses,\r\n    getHouseRT,\r\n    login\r\n}\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ButtonBase from '@material-ui/core/ButtonBase';\r\nimport api from '../helpers/api';\r\nimport { CircularProgress } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      padding: theme.spacing.unit * 2,\r\n      margin: 'auto',\r\n      maxWidth: 500,\r\n    }\r\n})\r\n\r\nclass InfoDisplay extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            rt: null,\r\n            not_found: false\r\n        }\r\n    }\r\n    \r\n    componentDidMount() {\r\n        this.getRT();\r\n    }\r\n\r\n    /**\r\n     * Get house id from props\r\n     * Call API helper function getHouseRT() to get this house RT info\r\n     * Set state to the RT returned\r\n     * If some error, it'll catch it in the state to render error warning/adive\r\n     */\r\n    getRT = async () => {\r\n        const { houseid } = this.props\r\n        try {\r\n            let rt = await api.getHouseRT(houseid);\r\n            this.setState({ rt });\r\n        } catch (err) {\r\n            this.setState( {not_found: true})\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns a Progress Circle to render\r\n     */\r\n    renderProgressIndicator = () => {\r\n        return <Grid   \r\n                container\r\n                alignItems=\"center\"\r\n                justify=\"center\"\r\n                style={{ minHeight: '100vh' }}>\r\n          <CircularProgress\r\n            size = {100}\r\n            color=\"primary\" />\r\n        </Grid>\r\n    }\r\n\r\n    /**\r\n     * Render all the info from RT\r\n     * Still in dev\r\n     * TODO: Make it beautier\r\n     */\r\n    renderInfo(){\r\n        const { rt } = this.state;\r\n        return <div>\r\n        <Paper >\r\n            <Grid container spacing={16}>\r\n                <Grid item xs={12} sm container>\r\n                    <Grid item xs container direction=\"column\" spacing={16}>\r\n                        <Grid item xs>\r\n                            <Typography align='center' variant=\"subtitle1\" >\r\n                                {rt.ID}\r\n                            </Typography>\r\n                            <Typography align='center'variant=\"inherit\">\r\n                            TEMPERATURA: {rt.TEMPERATURE}\r\n                            </Typography>\r\n                            <Typography align='center'variant=\"inherit\">\r\n                            FECHA: {rt.DATETIME}</Typography>\r\n                            <Typography align='center'variant=\"inherit\">CONCENTRACIÓN: {rt.CONCENTRATION}</Typography>\r\n                            <Typography align='center'variant=\"inherit\">HUMEDAD: {rt.HUMIDITY}</Typography>\r\n                            <Typography align='center'variant=\"inherit\">PRESIÓN: {rt.PRESSURE}</Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Paper>\r\n    </div>\r\n    }\r\n\r\n    /**\r\n     * If this house getting its RT threw some error, it'll render a message\r\n     * If this house has an actual RT ready on its state, will render it\r\n     * Else, it will render de progress circle\r\n     */\r\n    render() {\r\n        const { res_status } = this.props;\r\n        if(this.state.not_found) return <h3 style = {{color: \"red\"}}> Error 418 I'm a teapot </h3>\r\n        return (\r\n            this.state.rt ?  this.renderInfo() : this.renderProgressIndicator()\r\n        )\r\n    }\r\n}\r\n\r\nInfoDisplay.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(InfoDisplay);","import React from 'react';\r\nimport SvgIcon from '@material-ui/core/SvgIcon';\r\n\r\n\r\nfunction HomeIcon(props) {\r\n    return (\r\n      <SvgIcon {...props}>\r\n        <path d=\"M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z\" />\r\n      </SvgIcon>\r\n    );\r\n  }\r\n\r\n\r\n  export { HomeIcon }","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InfoDisplay from './InfoDisplay';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport { HomeIcon } from './Icons.js';\r\nimport { Grid, CircularProgress } from '@material-ui/core';\r\nimport api from '../helpers/api';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  nested: {\r\n    paddingLeft: theme.spacing.unit * 4,\r\n  },\r\n  info: {\r\n    paddingLeft: theme.spacing.unit * 5,\r\n  },\r\n\r\n});\r\n\r\n\r\nclass ListObject extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n        open: true,\r\n        houseid: this.props.house.ID,\r\n        rt: {}\r\n      }\r\n    }\r\n\r\n    handleClick = () => {\r\n      this.setState(state => ({ open: !state.open}));\r\n    };\r\n\r\n    render(){\r\n        const { classes, house } = this.props;\r\n        return (\r\n        <div>\r\n          <ListItem button onClick={this.handleClick}>\r\n            <ListItemIcon>  \r\n              <HomeIcon />  \r\n            </ListItemIcon>\r\n            <div>\r\n                <p>ID: {house.ID}</p> \r\n                <p>FULL NAME: {house.LASTNAME} {house.NAME}</p>\r\n                <p>ADDRESS: {house.ADDRESS} </p>\r\n            </div>\r\n            {this.state.open ? <ExpandMore/> : <ExpandLess />}\r\n          </ListItem>\r\n          <Collapse in={!this.state.open} timeout=\"auto\" unmountOnExit>\r\n            <List component=\"div\" disablePadding>\r\n            <ListItem  className={classes.nested}>\r\n            <Grid container>\r\n              <Grid item direction=\"column\">\r\n                <div>\r\n                    <p>DISPLAY: {house.DISPLAY} </p>\r\n                    <p>EMAIL: {house.EMAIL}</p> \r\n                    <p>PHONE NUMBER: {house.LASTNAME} {house.NAME}</p>\r\n                    <p>NUMBER OF RESIDENTS: {house.ADDRESS} </p>\r\n                    <p>NUMBER OF FLOORS: {house.FLOORNUMBER} </p>\r\n                    <p>NUMBER OF SMOKERS: {house.SMOKERSNUMBER} </p>\r\n                    <p>NUMBER OF PETS: {house.PETSNUMBER} </p>\r\n                    <p>IS REVOKED: {house.REVOKEHOUSE} </p>\r\n                    <p>FLOOR MATERIAL: {house.FLOORMATERIAL} </p>\r\n                    <p>WALLS MATERIAL: {house.WALLSMATERIAL} </p>\r\n                    <p>PAINT TYPE: {house.PAINTTYPE} </p>\r\n                    <p>LATITUDE: {house.LATITUDE} </p>\r\n                    <p>ALTITUDE: {house.ALTITUDE} </p>\r\n                    <p>LONGITUDE: {house.LONGITUDE} </p>\r\n                    <p>INSTALLED FOR: {house.INSTALLER} ON: {house.INSTALLDATE.substring(0,10)}</p>\r\n                </div>\r\n              </Grid>\r\n              <Grid item xs>\r\n                <InfoDisplay houseid={house.ID}/>\r\n              </Grid>\r\n            </Grid>\r\n              </ListItem>\r\n              </List>\r\n          </Collapse>\r\n        </div>\r\n        )\r\n        }\r\n}\r\n\r\nclass NestedList extends Component {\r\n\r\n  state = {\r\n    houses: null\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getHouses();\r\n  }\r\n\r\n  getHouses = async () => {\r\n    const houses = await api.getHouses();\r\n    this.setState({houses});\r\n  }\r\n\r\n  renderProgressIndicator = () => {\r\n    const { classes } = this.props; \r\n    return <Grid   \r\n            container\r\n            alignItems=\"center\"\r\n            justify=\"center\"\r\n            style={{ minHeight: '100vh' }}>\r\n      <CircularProgress \r\n        size = {100}\r\n        className={classes.progress} color=\"primary\" />\r\n    </Grid>\r\n  }\r\n\r\n  renderHouses = () => {\r\n    const { classes } = this.props; \r\n    const { houses } = this.state;\r\n    return <List\r\n        component=\"nav\"\r\n        subheader={<ListSubheader component=\"div\">All the houses registered in Airpal DB</ListSubheader>}\r\n        className={classes.root}\r\n      >\r\n        {houses.map(house => {\r\n          return <ListObject classes={classes} house={house} key={house.ID}/>\r\n        })}\r\n    </List>\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      this.state.houses ? this.renderHouses() : this.renderProgressIndicator()\r\n    );\r\n  }\r\n}\r\n\r\nNestedList.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(NestedList);","import Cookies from 'js-cookie';\r\n\r\nconst saveCookie = () =>{\r\n    Cookies.set(\"OA\", \"xd\");\r\n    console.log(Cookies.get(\"OA\"))\r\n}\r\n\r\n/**\r\n * Saves the session admin id\r\n * This cookie will expire in 30 days\r\n */\r\nconst saveSession = (admid_id) => {\r\n    Cookies.set('admid_id', admid_id);\r\n}\r\n\r\nconst getSession = () => {\r\n    return Cookies.get('admid_id');\r\n}\r\n\r\nexport default {\r\n    saveCookie,\r\n    saveSession,\r\n    getSession\r\n}","import React, { Component } from 'react';\r\nimport Header from './Components/Header.js';\r\nimport SignIn from './Components/Signin'\r\nimport Home from './Components/Home.js';\r\nimport Houses from './Components/Houses.js';\r\nimport { BrowserRouter as Router, Route, Redirect} from \"react-router-dom\";\r\nimport Cookies from './helpers/Cookies.js';\r\nimport api from './helpers/api.js';\r\nimport c from 'js-cookie';\r\n\r\nclass App extends Component {\r\n\r\n\r\n  state = {\r\n    session_id: null //Admin id saved in cookies for session \r\n  }\r\n  \r\n  \r\n  componentDidMount(){\r\n    this.getSession();\r\n  }\r\n\r\n  /**\r\n   * Checkout for cookies about the session id and saves it in the state\r\n   */\r\n  getSession = () => {\r\n    const session_id = Cookies.getSession();\r\n    if(session_id) {\r\n      this.setState({session_id: session_id})\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Calls api logIn method to check if the user exists\r\n   * If user login is successfull, saves the cookies for the session, and executes callback\r\n   * If it doesn't, shows a message to the user\r\n   */\r\n  logCheck = async (event, callback) => {\r\n    Cookies.saveSession(\"123321\");\r\n    try{\r\n      let user = await api.login({ID: 9908, PASSWORD: 123});\r\n      user = await user.json();\r\n\r\n      //Update session_id state\r\n      const session_id = user.ID;\r\n      this.setState({ session_id });\r\n      //We save the session in the coolkes\r\n      Cookies.saveSession(user.ID);\r\n      //Exec callback\r\n      callback();\r\n    }catch(err){\r\n      this.userNotFound();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * TODO this function, I was so sleepy right now, it's 3:57am mf\r\n   */\r\n  userNotFound = () => {\r\n    console.log(\"USER NOT FOUND\");\r\n  }\r\n\r\n  /**\r\n   * Bool function to simplify some things about session: Is logged?\r\n   */\r\n  isLoggedIn = () => {\r\n    return !!this.state.session_id;\r\n  }\r\n  \r\n  /**\r\n   * Renders Header component passing throught {props} a bool value for isLoggedId\r\n   *  this value determines if the user is logger or not, and also what's Header going to render\r\n   * \r\n   * Also, if the user is currently logged, will render the routes for the app\r\n   * Otherwise, it'll render a Redirect for all the paths, in order to make the user log in\r\n   */\r\n  render() {  \r\n    const isLogged = this.isLoggedIn();\r\n    return (\r\n      <Router>\r\n      <div>\r\n        <Header isLoggedIn={isLogged}/>\r\n        <Route exact path=\"/\" \r\n          render={() => <SignIn isLoggedIn={isLogged} \r\n          logCheck={this.logCheck}/> } />\r\n        {isLogged ? \r\n          <div>\r\n          <Route exact path=\"/houses\" render={() =>  <Houses />} />\r\n          <Route exact path=\"/home\" component={Home} />\r\n          </div>\r\n          :\r\n          <Redirect from='*' to='/' />\r\n        }\r\n\r\n      </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}