{"version":3,"sources":["Components/Header.js","Components/Signin.js","helpers/api.js","Components/Map.js","Components/FormHouse.js","Components/Home.js","Components/InfoDisplay.js","Components/Icons.js","Components/Houses.js","helpers/Cookies.js","App.js","serviceWorker.js","index.js"],"names":["withRouter","withStyles","theme","root","flexGrow","grow","button","margin","spacing","unit","hidden","display","props","classes","isLoggedIn","react_default","a","createElement","className","AppBar_default","position","Toolbar_default","IconButton_default","menuButton","color","aria-label","Home_default","Button_default","onClick","history","push","console","log","main","Object","defineProperty","width","marginLeft","marginRight","breakpoints","up","paper","marginTop","flexDirection","alignItems","padding","concat","avatar","backgroundColor","palette","secondary","form","submit","redirectHome","CssBaseline_default","Paper_default","Avatar_default","LockOutlined_default","Typography_default","component","variant","onSubmit","e","preventDefault","logCheck","FormControl_default","required","fullWidth","InputLabel_default","htmlFor","Input_default","id","name","autoComplete","autoFocus","type","FormControlLabel_default","control","Checkbox_default","value","label","api_ip","urls","houses","housert","admin_login","register","getHouses","_ref","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","fetch","sent","json","abrupt","stop","apply","this","arguments","postHouse","_ref2","_callee2","house","_context2","method","body","JSON","stringify","headers","Content-Type","_x","login","_ref3","_callee3","admin","url","_context3","ID","PASSWORD","_x2","api","getHouseRT","_ref4","_callee4","houseid","_context4","URL","search","URLSearchParams","_x3","MapContainer","_Component","_getPrototypeOf2","_this","classCallCheck","_len","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","state","showingInfoWindow","activeMarker","selectedPlace","onMarkerClick","marker","setState","onMapClicked","nose","positionMoved","mapProps","map","pos","lat","latLng","lng","updatePositionFields","inherits","createClass","key","dist","google","zoom","initialCenter","draggable","onDragend","visible","Component","GoogleApiWrapper","apiKey","FormHouse","NAME","LASTNAME","ADDRESS","TELNUMBER","PETSNUMBER","SMOKERSNUMBER","PAINTTYPE","REVOKEHOUSE","EMAIL","RESIDENTNUMBER","FLOORMATERIAL","FLOORNUMBER","WALLSMATERIAL","LATITUDE","LONGITUDE","ALTITUDE","DISPLAY","HOUSECODE","INSTALLER","INSTALLDATE","sendForm","setLocation","navigator","geolocation","getCurrentPosition","ubication","coords","longitude","latitude","altitude","alert","getLocation","handleChange","event","target","container","tittle","align","elevation","index_es","dense","expandIcon","ExpandMore_default","heading","details","TextField_default","onChange","textField","helperText","formControl","native","input","OutlinedInput_default","labelWidth","Map","React","borderRadius","paddingTop","select","minWidth","marginBottom","fontStyle","fontSize","Home","Components_FormHouse","InfoDisplay","getRT","rt","t0","not_found","renderProgressIndicator","Grid_default","justify","style","minHeight","size","square","Divider_default","TEMPERATURE","DATETIME","CONCENTRATION","HUMIDITY","PRESSURE","renderInfo","maxWidth","HomeIcon","SvgIcon_default","d","ListObject","handleClick","open","_this$props","ListItem_default","ListItemIcon_default","header","ExpandLess_default","Collapse_default","in","timeout","unmountOnExit","List_default","disablePadding","nested","item","grid1","substring","grid2","Components_InfoDisplay","NestedList","_this2","progress","renderHouses","subheader","ListSubheader_default","Houses_ListObject","paddingLeft","info","heigh","fontWeight","Cookies","saveCookie","set","get","saveSession","admid_id","getSession","App","session_id","data","callback","user","userNotFound","isLogged","BrowserRouter","Components_Header","Route","exact","path","render","Signin","Houses","Redirect","from","to","Boolean","window","location","hostname","match","ReactDOM","src_App","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.88a5145b.chunk.js","sourcesContent":["import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport HomeIcon from '@material-ui/icons/Home'\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    grow: {\r\n      flexGrow: 1,\r\n    },\r\n    button: {\r\n      margin: theme.spacing.unit,\r\n    },\r\n    hidden: {\r\n      display: \"none\"\r\n    }\r\n  })\r\n  \r\nfunction Header(props) {\r\n    const { classes, isLoggedIn } = props;\r\n    return (\r\n      <div className={classes.root}>\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n            <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\">\r\n                <HomeIcon/>\r\n              AIRPAL\r\n            </IconButton> \r\n            <Button \r\n              color=\"inherit\" \r\n              className={isLoggedIn ? classes.button : classes.hidden}\r\n              onClick={() => props.history.push(\"/home\")}>\r\n              Home\r\n            </Button>\r\n            <Button               \r\n              color=\"inherit\" \r\n              className={isLoggedIn ? classes.button : classes.hidden}\r\n              onClick={() => props.history.push(\"/houses\")}>\r\n              Houses\r\n            </Button>\r\n            <Button               \r\n              color=\"inherit\" \r\n              className={isLoggedIn ? classes.button : classes.hidden}\r\n              onClick={() => props.history.push(\"/home\")}>\r\n              Displays\r\n            </Button>\r\n            <Button               \r\n              color=\"inherit\" \r\n              className={isLoggedIn ? classes.button : classes.hidden}\r\n              onClick={() => props.history.push(\"/home\")}>\r\n              Admins\r\n            </Button>\r\n            <Button               \r\n              color=\"inherit\" \r\n              className={isLoggedIn ? classes.button : classes.hidden}\r\n              onClick={() => props.history.push(\"/home\")}>\r\n              Warnings\r\n            </Button>\r\n            <Button               \r\n              color=\"inherit\" \r\n              className={isLoggedIn ? classes.button : classes.hidden}\r\n              onClick={() => console.log(\"Falta\")}>              \r\n              Log Out\r\n            </Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n    );\r\n  } \r\n  \r\n  \r\n  export default withRouter(withStyles(styles)(Header));\r\n","import React from 'react'; \r\nimport PropTypes from 'prop-types';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst styles = theme => ({\r\n  main: {\r\n    width: 'auto',\r\n    display: 'block', // Fix IE 11 issue.\r\n    marginLeft: theme.spacing.unit * 3,\r\n    marginRight: theme.spacing.unit * 3,\r\n    [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\r\n      width: 400,\r\n      marginLeft: 'auto',\r\n      marginRight: 'auto',\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing.unit * 8,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme.spacing.unit * 3}px`,\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing.unit,\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing.unit,\r\n  },\r\n  submit: {\r\n    marginTop: theme.spacing.unit * 3,\r\n  },\r\n});\r\n\r\n\r\n/**\r\n * \r\n * @props\r\n * {\r\n *  isLoggedIn -> Bool variable that says if the user is logged in or not (Cookies, specially)\r\n * } \r\n */\r\nfunction SignIn(props) {\r\n  const redirectHome = () => props.history.push(\"/home\"); \r\n\r\n  if(props.isLoggedIn) redirectHome();\r\n\r\n  const { classes } = props;\r\n\r\n  function send(e) {\r\n      e.preventDefault();\r\n      props.logCheck(e, redirectHome);\r\n  }\r\n\r\n  return (\r\n    <main className={classes.main}>\r\n      <CssBaseline />\r\n      <Paper className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={send}>\r\n          <FormControl margin=\"normal\" required fullWidth>\r\n            <InputLabel htmlFor=\"email\">ID</InputLabel>\r\n            <Input id=\"email\" name=\"email\" autoComplete=\"email\" autoFocus />\r\n          </FormControl>\r\n          <FormControl margin=\"normal\" required fullWidth>\r\n            <InputLabel htmlFor=\"password\">Contraseña</InputLabel>\r\n            <Input name=\"password\" type=\"password\" id=\"password\" autoComplete=\"current-password\" />\r\n          </FormControl>\r\n          <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remcuerdame\"\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Ingresar\r\n          </Button>\r\n        </form>\r\n      </Paper>\r\n    </main>\r\n  );\r\n}\r\n\r\nSignIn.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withRouter(withStyles(styles)(SignIn));","\r\nconst api_ip = \"https://35.237.240.199:3002/api\";\r\nconst urls = {\r\n    houses: `${api_ip}/house`,\r\n    housert: `${api_ip}/house/rt`,\r\n    admin_login: `${api_ip}/admin/login`,\r\n    register: `${api_ip}/house/register`\r\n}\r\n\r\n/**\r\n * Calls Airpal API and returns a Promise with that HTTP request\r\n */\r\nconst getHouses = async () => {\r\n    //TODO: Call API and get houses\r\n    let houses = await fetch(urls.houses);\r\n    houses = await houses.json();\r\n    return houses;\r\n}\r\n\r\n/**\r\n * Send a post request to the API\r\n * @house \r\n */\r\nconst postHouse = async (house) => {\r\n    const json = {\r\n        method: 'POST',\r\n        body: JSON.stringify(house),\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n    return fetch(urls.register, json)\r\n}\r\n\r\n\r\n/**\r\n * Calls Airpal API to look for the admin to login \r\n * \r\n * @admin must be in the format\r\n * {\r\n *  ID: @admin.ID\r\n *  PASSWORD: @admin.PASSWORD\r\n * } \r\n * \r\n * @return a JSON with the admin found, or a {} in case not found/not exists\r\n */\r\nconst login = async (admin) => {\r\n    const body = {\r\n        ID: `${admin.ID}`,\r\n        PASSWORD: `${admin.PASSWORD}`\r\n    };\r\n    \r\n    const json = {\r\n        method: 'POST',\r\n        body: JSON.stringify(body),\r\n        headers:{\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n    const url = urls.admin_login;\r\n    let login = await fetch(url, json);\r\n\r\n    return login;\r\n}\r\n\r\n/**\r\n * Get the house RT giving the id of the house\r\n */\r\nconst getHouseRT = async (houseid) => {\r\n    let url = new URL(urls.housert);\r\n    url.search = new URLSearchParams({houseid})\r\n    let housert = await fetch(url);\r\n    housert = await housert.json();\r\n    return housert;\r\n}\r\n\r\nexport default {\r\n    getHouses,\r\n    getHouseRT,\r\n    login,\r\n    postHouse\r\n}\r\n","import React, { Component } from 'react';\r\nimport {Map, InfoWindow, Marker, GoogleApiWrapper} from 'google-maps-react';\r\n\r\n  \r\n\r\nexport class MapContainer extends Component {\r\n  state = {\r\n    showingInfoWindow: false,\r\n    activeMarker: {},\r\n    selectedPlace: {},\r\n    position: this.props.position\r\n  };\r\n\r\n  onMarkerClick = (props, marker, e) => {\r\n    this.setState({\r\n      selectedPlace: props,\r\n      activeMarker: marker,\r\n      showingInfoWindow: true\r\n    });\r\n  }\r\n\r\n  onMapClicked = (props, nose) => {\r\n    if (this.state.showingInfoWindow) {\r\n      this.setState({\r\n        showingInfoWindow: false,\r\n        activeMarker: null,\r\n      })\r\n    } \r\n  };\r\n\r\n  positionMoved = (mapProps, map, pos) => {\r\n    this.setState({\r\n        position: {\r\n          lat: pos.latLng.lat(),\r\n          lng: pos.latLng.lng()\r\n        }\r\n      })\r\n    this.props.updatePositionFields(this.state.position);\r\n  }\r\n\r\n  render() {\r\n    const { position } = this.state; \r\n    return (\r\n      <Map google={this.props.google} \r\n        zoom={14}\r\n        initialCenter={position}\r\n        onClick = {this.onMapClicked}>\r\n \r\n        <Marker onClick={this.onMarkerClick}\r\n                name={'Esta es tu casita <3 '} \r\n                position={position}\r\n                draggable={true}\r\n                onDragend={this.positionMoved}/> \r\n \r\n        <InfoWindow\r\n                  marker={this.state.activeMarker}\r\n                  visible={this.state.showingInfoWindow}>\r\n                    <div>\r\n                      <h1>{this.state.selectedPlace.name}</h1>\r\n            </div>\r\n        </InfoWindow>\r\n      </Map>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: \"AIzaSyBGsYTyBvpy_UOWl8VWJF27Yz8TD6iPWTU\"\r\n})(MapContainer)","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Typography from '@material-ui/core/Typography'\r\nimport api from '../helpers/api'\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\nimport { ExpansionPanel, ExpansionPanelSummary, ExpansionPanelDetails, Button, Select, FormControl } from '@material-ui/core';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Map from './Map';\r\n\r\nconst styles = theme => ({\r\n  container: {\r\n    display: 'flexbox',\r\n    margin: '20px',\r\n    borderRadius: 5,\r\n    paddingTop: 15,\r\n    \r\n  },\r\n  form: {\r\n    display: 'flexbox',\r\n    margin: '20px',\r\n  },\r\n  textField: {\r\n    margin: theme.spacing.unit,\r\n    borderRadius: 5\r\n  },\r\n  select: {\r\n    margin: theme.spacing.unit,\r\n    width: theme.spacing.unit * 15,\r\n    minWidth: 200,\r\n    borderRadius: 5,\r\n  },\r\n  paper: {\r\n    paddingTop: 5,\r\n    marginTop: '2em',\r\n    backgroundColor: '#1565c0'\r\n  },\r\n  tittle : {\r\n    margin: 'auto',\r\n  },\r\n  dense: {\r\n    marginTop: 20,\r\n    borderRadius: 5\r\n  },\r\n  details: {\r\n    display: 'block',\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing.unit,\r\n    minWidth: 170,\r\n  },\r\n  button: {\r\n    borderRadius: 5,\r\n    marginTop: 15,\r\n    marginBottom: 10,\r\n  },\r\n  helperText: {\r\n    color: '#424242',\r\n    fontStyle: 'italic',\r\n    fontSize: '1.3em'\r\n  }\r\n});\r\n\r\n// const revokedOptions = [\r\n//   {\r\n//     label: 'SI',\r\n//     value: true,\r\n//     key: 'revoked'\r\n//   },\r\n//   {\r\n//     label: 'NO',\r\n//     value: false,\r\n//     key: 'not-revoked'\r\n//   }\r\n// ]\r\n\r\nclass FormHouse extends React.Component {\r\n  state = {\r\n    ID: 666,\r\n    NAME: '',\r\n    LASTNAME: '',\r\n    ADDRESS: '',\r\n    TELNUMBER: '',\r\n    PETSNUMBER: '',\r\n    SMOKERSNUMBER: '',\r\n    PAINTTYPE: '',\r\n    REVOKEHOUSE: '',\r\n    EMAIL: '',\r\n    RESIDENTNUMBER: '',\r\n    FLOORMATERIAL: '',\r\n    FLOORNUMBER: '',\r\n    WALLSMATERIAL: '',\r\n    LATITUDE: '',\r\n    LONGITUDE: '',\r\n    ALTITUDE: '',\r\n    DISPLAY: 1,\r\n    HOUSECODE: 3,\r\n    INSTALLER: \"1\",\r\n    INSTALLDATE: \"2018-11-04T00:00:00.000Z\"\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setLocation();\r\n  }\r\n\r\n  /**\r\n   * Envia la petición HTTP con la información del formulario\r\n   */\r\n  sendForm = async (e) => {\r\n    e.preventDefault();\r\n    api.postHouse(this.state);\r\n  }\r\n\r\n  /**\r\n   * Obtine la ubicación del dispositivo\r\n   */\r\n  setLocation = () => {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(ubication =>{\r\n        this.setState({\r\n          LONGITUDE:ubication.coords.longitude,\r\n          LATITUDE: ubication.coords.latitude,\r\n          ALTITUDE: ubication.coords.altitude\r\n        });        \r\n      });\r\n    } else {\r\n      alert('Debes activar la ubicación para registrarte')\r\n    }\r\n  }\r\n\r\n  getLocation = () => {\r\n    console.log(\"STATE: \" , this.state)\r\n    return {\r\n      lat: this.state.LATITUDE,\r\n      lng: this.state.LONGITUDE\r\n    }\r\n  }\r\n  \r\n  updatePositionFields = (position) => {\r\n    //TODO: MOSTRAR ESTO EN UNOS CAMPITOS DEL FORMULARIO AHÍ BIEN LINDOS <3\r\n    console.log(\"Position\", position);\r\n  }\r\n  \r\n\r\n  /**\r\n   * Cambia el estade segun el evento que se ejecute\r\n   * Param: \r\n   * name:String que indica el nombre del atributo \r\n   * del estado que se desea cambiar\r\n   */\r\n  handleChange = name => event => {\r\n    this.setState({\r\n      [name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <div className={classes.container}>\r\n        <Typography className={classes.tittle} variant='h2' align='center'>Registro de Vivienda</Typography>\r\n        <Paper className={classes.paper} elevation={10}>\r\n          <form className={classes.form} autoComplete=\"off\" method='POST' onSubmit={this.sendForm}>\r\n            <ExpansionPanel className={classes.dense}>\r\n              <ExpansionPanelSummary expandIcon={<ExpandMoreIcon/>}>\r\n                <Typography className={classes.heading} variant='title'>Información de habitante</Typography>\r\n              </ExpansionPanelSummary>\r\n              <ExpansionPanelDetails className={classes.details}>\r\n                <TextField \r\n                    id='house-name'\r\n                    name='NAME'\r\n                    variant='outlined'\r\n                    onChange={this.handleChange('NAME')}\r\n                    label='Nombre'\r\n                    required={true}\r\n                    className={classes.textField}\r\n                  />\r\n                  <TextField \r\n                    id='house-lastname'\r\n                    name='LASTNAME'\r\n                    onChange={this.handleChange('LASTNAME')}\r\n                    variant='outlined'\r\n                    required={true}\r\n                    label='Apellidos'\r\n                    className={classes.textField}/>\r\n                  <TextField \r\n                    id='house-email'\r\n                    name='EMAIL'\r\n                    label='Email'\r\n                    onChange={this.handleChange('EMAIL')}\r\n                    variant='outlined'\r\n                    type='EMAIL'\r\n                    required={true}\r\n                    className={classes.textField}/>\r\n                  <TextField \r\n                    id='house-telnumber'\r\n                    name='TELNUMBER'\r\n                    label='Telefono'\r\n                    onChange={this.handleChange('TELNUMBER')}\r\n                    required={true}\r\n                    variant='outlined'\r\n                    className={classes.textField}\r\n                    type='number'\r\n                  />\r\n                  <TextField \r\n                    id='house-address'\r\n                    name='ADDRESS'\r\n                    variant='outlined'\r\n                    onChange={this.handleChange('ADDRESS')}\r\n                    label='Dirección'\r\n                    required={true}\r\n                    className={classes.textField}/>\r\n                  <TextField \r\n                    id='houses-resident-number'\r\n                    name='RESIDENTNUMBER'\r\n                    onChange={this.handleChange('RESIDENTNUMBER')}\r\n                    variant='outlined'\r\n                    label='Número de residentes'\r\n                    required={true}\r\n                    type='number'\r\n                    className={classes.textField}/>\r\n              </ExpansionPanelDetails>\r\n            </ExpansionPanel>\r\n            <ExpansionPanel className={classes.dense}>\r\n              <ExpansionPanelSummary expandIcon={<ExpandMoreIcon/>}>\r\n                <Typography variant='title' className={classes.heading}>Información Vivienda</Typography>\r\n              </ExpansionPanelSummary>\r\n              <ExpansionPanelDetails className={classes.details}>\r\n                <TextField \r\n                  id='house-floor-number'\r\n                  name='FLOORNUMBER'\r\n                  onChange={this.handleChange('FLOORNUMBER')}\r\n                  required={true}\r\n                  variant='outlined'\r\n                  label='Numero de piso'\r\n                  helperText={\r\n                    <label className={classes.helperText}>Segun la altidud del piso en el edificio</label>\r\n                  }\r\n                  className={classes.textField}\r\n                  type='number'/>\r\n                {/* <TextField \r\n                  id='house-revoked'\r\n                  name='REVOKEHOUSE'\r\n                  variant='outlined'\r\n                  label='Casa revocada'\r\n                  fullWidth\r\n                  select\r\n                  className={classes.select}\r\n                  value={this.state.REVOKEHOUSE}\r\n                  onChange={this.handleChange('REVOKEHOUSE')}>\r\n                  {revokedOptions.map(option => (\r\n                    <option key={option.key} value={option.value}>\r\n                      {option.label}\r\n                    </option>\r\n                  ))}\r\n                </TextField> */}\r\n                <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                  <InputLabel\r\n                    htmlFor=\"house-revokehouse\"\r\n                  >\r\n                    Casa revocada\r\n                  </InputLabel>\r\n                  <Select\r\n                    native\r\n                    value={this.state.REVOKEHOUSE}\r\n                    onChange={this.handleChange('REVOKEHOUSE')}\r\n                    input={\r\n                      <OutlinedInput\r\n                        name=\"REVOKEHOUSE\"\r\n                        labelWidth={200}\r\n                        id=\"house-revokehouse\"\r\n                      />\r\n                    }\r\n                  >\r\n                    <option value=\"\" />\r\n                    <option value={true}>SI</option>\r\n                    <option value={false}>NO</option>\r\n                  </Select>\r\n                </FormControl>\r\n                <TextField \r\n                  id='house-smokers'\r\n                  variant='outlined'\r\n                  onChange={this.handleChange('SMOKERSNUMBER')}\r\n                  name='SMOKERSNUMBER'\r\n                  label='Numero de fumadores'\r\n                  helperText={\r\n                    <label className={classes.helperText}>Si no hay fumadores ingrese 0</label>\r\n                  }\r\n                  type='number'\r\n                  required={true}\r\n                  className={classes.textField}/>\r\n                <TextField\r\n                  id='house-pet-number'\r\n                  name='PETSNUMBER'\r\n                  label='Numero de mascotas'\r\n                  onChange={this.handleChange('PETSNUMBER')}\r\n                  variant='outlined'\r\n                  helperText={\r\n                    <label className={classes.helperText}>Si no hay, ingrese 0</label>\r\n                  }\r\n                  required={true}\r\n                  className={classes.textField}\r\n                  type='number'/>\r\n                <TextField \r\n                  id='house-floor-material'\r\n                  variant='outlined'\r\n                  name='FLOORMATERIAL'\r\n                  onChange={this.handleChange('FLOORMATERIAL')}\r\n                  label='Material del suelo'\r\n                  className={classes.textField}\r\n                  required={true}/>\r\n                <TextField \r\n                  id='house-walls-material'\r\n                  name='WALLSMATERIAL'\r\n                  variant='outlined'\r\n                  onChange={this.handleChange('WALLSMATERIAL')}\r\n                  label='Material de las paredes'\r\n                  className={classes.textField}\r\n                  required={true}/>\r\n                <TextField \r\n                  id='house-paint'\r\n                  variant='outlined'\r\n                  name='PAINTTYPE'\r\n                  onChange={this.handleChange('PAINTTYPE')}\r\n                  label='Tipo de pintura'\r\n                  className={classes.textField}\r\n                  required={true}/>\r\n              </ExpansionPanelDetails>\r\n            </ExpansionPanel>\r\n            <Button variant='contained' type='submit' className={classes.button}>Registrar</Button>\r\n            <Map position={ this.getLocation() }\r\n              updatePositionFields = { this.updatePositionFields }/>  \r\n          </form>\r\n        </Paper>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nFormHouse.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(FormHouse);","import React from 'react';\r\nimport FormHouse from './FormHouse';\r\n\r\nfunction Home(props){\r\n    return (\r\n    <div>\r\n        <h1> Hola desde Home </h1>\r\n        <FormHouse />\r\n    </div>)\r\n\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport api from '../helpers/api';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport Divider from '@material-ui/core/Divider'\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      padding: theme.spacing.unit,\r\n      margin: 'auto',\r\n      maxWidth: 700,\r\n      backgroundColor: '#9e9e9e'\r\n    }\r\n})\r\n\r\nclass InfoDisplay extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            rt: null,\r\n            not_found: false\r\n        }\r\n    }\r\n    \r\n    componentDidMount() {\r\n        this.getRT();\r\n    }\r\n\r\n    /**\r\n     * Get house id from props\r\n     * Call API helper function getHouseRT() to get this house RT info\r\n     * Set state to the RT returned\r\n     * If some error, it'll catch it in the state to render error warning/adive\r\n     */\r\n    getRT = async () => {\r\n        const { houseid } = this.props\r\n        try {\r\n            let rt = await api.getHouseRT(houseid);\r\n            this.setState({ rt });\r\n        } catch (err) {\r\n            this.setState( {not_found: true})\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns a Progress Circle to render\r\n     */\r\n    renderProgressIndicator = () => {\r\n        return <Grid   \r\n                container\r\n                alignItems=\"center\"\r\n                justify=\"center\"\r\n                style={{ minHeight: '100vh' }}>\r\n          <CircularProgress\r\n            size = {100}\r\n            color=\"primary\" />\r\n        </Grid>\r\n    }\r\n\r\n    /**\r\n     * Render all the info from RT\r\n     * Still in dev\r\n     * TODO: Make it beautier\r\n     */\r\n    renderInfo(){\r\n        const { rt } = this.state;\r\n        const {classes} = this.props;\r\n        return <div className={classes.root}>\r\n        <Paper className={classes.paper} square={false} elevation={6}>\r\n            <Typography variant=\"subtitle1\">\r\n                DISPOSITIVO: {rt.ID}\r\n            </Typography>\r\n            <Divider />\r\n            <Typography>\r\n                TEMPERATURA: {rt.TEMPERATURE}\r\n            </Typography>\r\n            <Typography>\r\n                FECHA: {rt.DATETIME}\r\n            </Typography>\r\n            <Typography>\r\n                CONCENTRACIÓN: {rt.CONCENTRATION}\r\n            </Typography>\r\n            <Typography>\r\n                HUMEDAD: {rt.HUMIDITY}\r\n            </Typography>\r\n            <Typography>\r\n                PRESIÓN: {rt.PRESSURE}\r\n            </Typography>   \r\n        </Paper>\r\n    </div>\r\n    }\r\n\r\n    /**\r\n     * If this house getting its RT threw some error, it'll render a message\r\n     * If this house has an actual RT ready on its state, will render it\r\n     * Else, it will render de progress circle\r\n     */\r\n    render() {\r\n        if(this.state.not_found) return <h3 style = {{color: \"red\"}}> Error 418 I'm a teapot </h3>\r\n        return (\r\n            this.state.rt ?  this.renderInfo() : this.renderProgressIndicator()\r\n        )\r\n    }\r\n}\r\n\r\nInfoDisplay.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(InfoDisplay);","import React from 'react';\r\nimport SvgIcon from '@material-ui/core/SvgIcon';\r\n\r\n\r\nfunction HomeIcon(props) {\r\n    return (\r\n      <SvgIcon {...props}>\r\n        <path d=\"M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z\" />\r\n      </SvgIcon>\r\n    );\r\n  }\r\n\r\n\r\n  export { HomeIcon }","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport InfoDisplay from './InfoDisplay';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport { HomeIcon } from './Icons.js';\r\nimport { Grid, CircularProgress } from '@material-ui/core';\r\nimport api from '../helpers/api';\r\nimport Paper from '@material-ui/core/Paper';\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  nested: {\r\n    paddingLeft: theme.spacing.unit * 4,\r\n  },\r\n  info: {\r\n    paddingLeft: theme.spacing.unit * 5,\r\n  },\r\n  grid1: {\r\n    backgroundColor: '#2c387e',\r\n    padding: 5,\r\n    borderRadius: 5,\r\n    marginBottom: 5\r\n  },\r\n  grid2: {\r\n    margin: 'auto',\r\n    width: '30%',\r\n    heigh: '100%'\r\n  },\r\n  header: {\r\n    fontWeight: 'bold'\r\n  },\r\n  paper: {\r\n    margin: 20,\r\n    padding: 10,\r\n  },\r\n  subheader: {\r\n    color: '#2962ff',\r\n    backgroundColor: 'rgba(224,224,224,0.9)'\r\n  },\r\n});\r\n\r\n\r\nclass ListObject extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n        open: true,\r\n        houseid: this.props.house.ID,\r\n        rt: {}\r\n      }\r\n    }\r\n\r\n    handleClick = () => {\r\n      this.setState(state => ({ open: !state.open}));\r\n    };\r\n\r\n    render(){\r\n        const { classes, house } = this.props;\r\n        return (\r\n        <div>\r\n          <ListItem button onClick={this.handleClick}>\r\n            <ListItemIcon>  \r\n              <HomeIcon />  \r\n            </ListItemIcon>\r\n            <div className={classes.header}>\r\n                <p>ID: {house.ID}</p> \r\n                <p>FULL NAME: {house.LASTNAME} {house.NAME}</p>\r\n                <p>ADDRESS: {house.ADDRESS} </p>\r\n            </div>\r\n            {this.state.open ? <ExpandMore/> : <ExpandLess />}\r\n          </ListItem>\r\n          <Collapse in={!this.state.open} timeout=\"auto\" unmountOnExit>\r\n            <List  component=\"div\" disablePadding>\r\n              <ListItem  className={classes.nested}>\r\n                <Grid container>\r\n                  <Grid item className={classes.grid1}>\r\n                    <Paper className={classes.paper} elevation={10}>\r\n                        <p>DISPLAY: {house.DISPLAY}</p>\r\n                        <p>EMAIL: <i>{house.EMAIL}</i></p> \r\n                        <p>PHONE NUMBER: <i>{house.TELNUMBER} </i></p>\r\n                        <p >NUMBER OF RESIDENTS: <i>{house.ADDRESS}</i></p>\r\n                        <p >NUMBER OF FLOORS: <i>{house.FLOORNUMBER}</i></p>\r\n                        <p >NUMBER OF SMOKERS: <i>{house.SMOKERSNUMBER}</i></p>\r\n                        <p >NUMBER OF PETS: <i>{house.PETSNUMBER}</i></p>\r\n                        <p >IS REVOKED: <i>{house.REVOKEHOUSE}</i></p>\r\n                        <p >FLOOR MATERIAL: <i>{house.FLOORMATERIAL}</i></p>\r\n                        <p >WALLS MATERIAL: <i>{house.WALLSMATERIAL}</i></p>\r\n                        <p >PAINT TYPE: <i>{house.PAINTTYPE}</i></p>\r\n                        <p >LATITUDE: <i>{house.LATITUDE}</i></p>\r\n                        <p >ALTITUDE: <i>{house.ALTITUDE}</i></p>\r\n                        <p >LONGITUDE: <i>{house.LONGITUDE}</i></p>\r\n                        <p >INSTALLED FOR: <b>{house.INSTALLER}</b> ON: {house.INSTALLDATE.substring(0,10)}</p>\r\n                    </Paper>\r\n                  </Grid>\r\n                  <Grid className={classes.grid2} item>\r\n                    <InfoDisplay houseid={house.ID}/>\r\n                  </Grid>\r\n                </Grid>\r\n              </ListItem>\r\n            </List>\r\n          </Collapse>\r\n        </div>\r\n        )\r\n        }\r\n}\r\n\r\nclass NestedList extends Component {\r\n\r\n  state = {\r\n    houses: null\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getHouses();\r\n  }\r\n\r\n  getHouses = async () => {\r\n    const houses = await api.getHouses();\r\n    this.setState({houses});\r\n  }\r\n\r\n  renderProgressIndicator = () => {\r\n    const { classes } = this.props; \r\n    return <Grid   \r\n            container\r\n            alignItems=\"center\"\r\n            justify=\"center\"\r\n            style={{ minHeight: '100vh' }}>\r\n      <CircularProgress \r\n        size = {100}\r\n        className={classes.progress} color=\"primary\" />\r\n    </Grid>\r\n  }\r\n\r\n  renderHouses = () => {\r\n    const { classes } = this.props; \r\n    const { houses } = this.state;\r\n    return <List\r\n        component=\"nav\"\r\n        subheader={<ListSubheader className={classes.subheader} component=\"div\">All the houses registered in Airpal DB</ListSubheader>}\r\n        className={classes.root}\r\n      >\r\n        {houses.map(house => {\r\n          return <ListObject classes={classes} house={house} key={house.ID}/>\r\n        })}\r\n    </List>\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      this.state.houses ? this.renderHouses() : this.renderProgressIndicator()\r\n    );\r\n  }\r\n}\r\n\r\nNestedList.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(NestedList);","import Cookies from 'js-cookie';\r\n\r\nconst saveCookie = () =>{\r\n    Cookies.set(\"OA\", \"xd\");\r\n    console.log(Cookies.get(\"OA\"))\r\n}\r\n\r\n/**\r\n * Saves the session admin id\r\n * This cookie will expire in 30 days\r\n */\r\nconst saveSession = (admid_id) => {\r\n    Cookies.set('admid_id', admid_id);\r\n}\r\n\r\nconst getSession = () => {\r\n    return Cookies.get('admid_id');\r\n}\r\n\r\nexport default {\r\n    saveCookie,\r\n    saveSession,\r\n    getSession\r\n}","import React, { Component } from 'react';\r\nimport Header from './Components/Header.js';\r\nimport SignIn from './Components/Signin'\r\nimport Home from './Components/Home.js';\r\nimport Houses from './Components/Houses.js';\r\nimport { BrowserRouter as Router, Route, Redirect} from \"react-router-dom\";\r\nimport Cookies from './helpers/Cookies.js';\r\nimport api from './helpers/api.js';\r\n\r\nclass App extends Component {\r\n\r\n\r\n  state = {\r\n    session_id: null //Admin id saved in cookies for session \r\n  }\r\n  \r\n  \r\n  componentDidMount(){\r\n    this.getSession();\r\n  }\r\n\r\n  /**\r\n   * Checkout for cookies about the session id and saves it in the state\r\n   */\r\n  getSession = () => {\r\n    const session_id = Cookies.getSession();\r\n    if(session_id) {\r\n      this.setState({session_id: session_id})\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Calls api logIn method to check if the user exists\r\n   * If user login is successfull, saves the cookies for the session, and executes callback\r\n   * If it doesn't, shows a message to the user\r\n   */\r\n  logCheck = async (data, callback) => {\r\n    try{\r\n      let user = await api.login({ID: 9908, PASSWORD: 123});\r\n      user = await user.json();\r\n\r\n      //Update session_id state\r\n      const session_id = user.ID;\r\n      this.setState({ session_id });\r\n      //We save the session in the coolkes\r\n      Cookies.saveSession(user.ID);\r\n      //Exec callback\r\n      callback();\r\n    }catch(err){\r\n      this.userNotFound();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * TODO this function, I was so sleepy right now, it's 3:57am mf\r\n   */\r\n  userNotFound = () => {\r\n    console.log(\"USER NOT FOUND\");\r\n  }\r\n\r\n  /**\r\n   * Bool function to simplify some things about session: Is logged?\r\n   */\r\n  isLoggedIn = () => {\r\n    return !!this.state.session_id;\r\n  }\r\n  \r\n  /**\r\n   * Renders Header component passing throught {props} a bool value for isLoggedId\r\n   *  this value determines if the user is logger or not, and also what's Header going to render\r\n   * \r\n   * Also, if the user is currently logged, will render the routes for the app\r\n   * Otherwise, it'll render a Redirect for all the paths, in order to make the user log in\r\n   */\r\n  render() {  \r\n    const isLogged = this.isLoggedIn();\r\n    return (\r\n      <Router>\r\n      <div>\r\n        <Header isLoggedIn={isLogged}/>\r\n        <Route exact path=\"/\" \r\n          render={() => <SignIn isLoggedIn={isLogged} \r\n          logCheck={this.logCheck}/> } />\r\n        {isLogged ? \r\n          <div>\r\n          <Route exact path=\"/houses\" render={() =>  <Houses />} />\r\n          <Route exact path=\"/home\" component={Home} />\r\n          </div>\r\n          :\r\n          <Redirect from='*' to='/' />\r\n        }\r\n\r\n      </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}